<main>
  <section id="dash_container">
  </section>
</main>

<script>
  function refreshPosts() {
    console.log('in function');

    fetch('/api/posts/foruser', {
      method: 'GET',
      header: {
        'Content-Type': 'application/json',
      },
    }).then((data) => {
      return data.json()
      }).then((data) => {
      console.log(data);
      
      const postOffice = document.querySelector('#dash_container');

      const createPosts = (title, text, name, time, postId) => {
        const date = new Date(time);
        const formattedDate = date.toLocaleDateString("en-US", {
          year: "numeric",
          month: "2-digit",
          day: "2-digit"
        });

        const newPost = document.createElement('section');
        newPost.id = "topic_container";
        newPost.classList.add('m1h', 'border');

        const newHead = document.createElement('header');
        newHead.id = 'topic_header';
        newHead.classList.add('ph', 'bg-brown');

        const newTitle = document.createElement('div');
        newTitle.classList.add('txt-sz2', 'title-txt-color', 'txt-bold');
        newTitle.textContent = title;

        const newSubs = document.createElement('div');
        newSubs.classList.add('txt-sz1', 'flex', 'space-between', 'pt1');
        
        const newAuthor = document.createElement('div');
        newAuthor.classList.add('flex-start', 'sub-txt-color');
        newAuthor. textContent = `By: ${name}`;

        const newTime = document.createElement('div');
        newTime.classList.add('flex-end', 'sub-txt-color');
        newTime. textContent = formattedDate;

        const newText = document.createElement('div');
        newText.id = 'topic_info';
        newText.classList.add('ph', 'txt-sz1h');
        newText.textContent = text;

        const btnCont = document.createElement('div');
        btnCont.id = 'fn_btns';
        btnCont.classList.add('border-top' ,'flex-row');

        const newEdit = document.createElement('div');
        newEdit.id = 'edit';
        newEdit.classList.add('w50', 'flex', 'center', 'border-right', 'pt1', 'pb1');
        newEdit.textContent = 'Edit';

        const newDel = document.createElement('div');
        newDel.id = 'delete';
        newDel.classList.add('w50', 'flex', 'center', 'border-left','pt1', 'pb1');
        newDel.textContent = 'Delete';
        newDel.addEventListener('click', (event) => {
          event.preventDefault();
          fetch('/api/posts', {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              id: postId,
            }),
          }).then(() => {
              window.location.reload();
          });
        });

        newSubs.appendChild(newAuthor);
        newSubs.appendChild(newTime);
        newHead.appendChild(newTitle);
        newHead.appendChild(newSubs);
        btnCont.appendChild(newEdit);
        btnCont.appendChild(newDel);
        newPost.appendChild(newHead);
        newPost.appendChild(newText);
        newPost.appendChild(btnCont);
        
        postOffice.appendChild(newPost);
      };

      if (data.length == 0) {
        console.log('nothing here');
      } else {
        for (const post of data) {
          console.log(post);
          createPosts(post.title, post.text, post.user.username, post.updatedAt, post.id);
        }
      }
    });
  };

  refreshPosts();
</script>